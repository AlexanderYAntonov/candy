{"version":3,"sources":["components/ScrollButton.js","components/Album.js","components/Details.js","components/NotFound.js","components/Order.js","App.js","serviceWorker.js","index.js"],"names":["ScrollButton","state","intervalId","arrowTop","window","document","getElementById","addEventListener","hidden","pageYOffset","clearInterval","this","scroll","props","scrollStepInPx","setInterval","scrollStep","bind","delayInMs","setState","id","title","className","onClick","scrollToTop","React","Component","Album","Preloader","buildTemplate","list","map","card","Grid","item","key","xs","sm","md","xl","Card","CardMedia","image","imgSrc","CardContent","Typography","gutterBottom","variant","component","shortDescription","CardActions","to","Button","size","isLoading","Fragment","Container","maxWidth","container","spacing","Details","data","fullDescription","NotFound","Order","Copyright","align","Date","getFullYear","App","DetailsWrapper","match","params","filter","length","RouterTemplate","exact","path","render","fetch","then","response","json","catch","error","console","AppBar","position","Toolbar","color","noWrap","Boolean","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9c82a6f5.chunk.js","sourcesContent":["import React from 'react';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport './ScrollButton.scss';\n\nclass ScrollButton extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      intervalId: 0\n    };\n  }\n\n  componentDidMount() {\n    const arrowTop = window.document.getElementById('scroll-top-button');\n    window.addEventListener('scroll', function() {\n      arrowTop.hidden = window.pageYOffset === 0;\n    });\n  }\n\n  scrollStep() {\n    if (window.pageYOffset === 0) {\n      clearInterval(this.state.intervalId);\n    }\n    window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n  }\n\n  scrollToTop() {\n    let intervalId = setInterval(\n      this.scrollStep.bind(this),\n      this.props.delayInMs\n    );\n    this.setState({ intervalId: intervalId });\n  }\n\n  render() {\n    return (\n      <button\n        id=\"scroll-top-button\"\n        title=\"Наверх\"\n        className={'scroll'}\n        onClick={() => {\n          this.scrollToTop();\n        }}\n      >\n        <ExpandLessIcon className={'scroll-top__icon'} />\n      </button>\n    );\n  }\n}\n\nexport { ScrollButton };\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ScrollButton } from './ScrollButton';\nimport './Album.scss';\nimport '../styles.scss';\n\nclass Album extends React.Component {\n  Preloader = () => {\n    return (\n      <div className={'lds-container'}>\n        <div className={'lds-ellipsis'}>\n          <div />\n          <div />\n          <div />\n          <div />\n        </div>\n      </div>\n    );\n  };\n\n  buildTemplate = () => {\n    const { list } = this.props;\n    const prefix = '/candy/assets/images/';\n    return list.map((card) => (\n      <Grid\n        item\n        key={card.id}\n        xs={12}\n        sm={12}\n        md={6}\n        xl={4}\n        className={'albumGrid'}\n      >\n        <Card className={'card'}>\n          <CardMedia\n            className={'cardMedia'}\n            image={prefix + card.imgSrc}\n            title={card.title}\n          />\n          <CardContent className={'cardContent'}>\n            <Typography\n              gutterBottom\n              variant=\"h6\"\n              component=\"h3\"\n              className={'cardTitle'}\n            >\n              {card.title}\n            </Typography>\n            <Typography className={'cardText'}>\n              {card.shortDescription}\n            </Typography>\n          </CardContent>\n          <CardActions className={'cardActions'}>\n            <Link to={'/details/' + card.id}>\n              <Button size=\"small\" className={'cardButton'}>\n                Подробнее\n              </Button>\n            </Link>\n            <Link to=\"/order\">\n              <Button size=\"small\" className={'cardButton'}>\n                Заказать\n              </Button>\n            </Link>\n          </CardActions>\n        </Card>\n      </Grid>\n    ));\n  };\n\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <React.Fragment>\n        <main>\n          <div className={'hero-content'}>\n            <div className={'heroButtons'}>\n              <Link to=\"/order\">\n                <Button variant=\"contained\" className={'mainButton'}>\n                  Заказать\n                </Button>\n              </Link>\n            </div>\n            <div className={'hero-title'}>\n              Домашний кондитер - выпечка на заказ\n            </div>\n          </div>\n          <Container className={'cardGrid'} maxWidth=\"md\">\n            <Grid container spacing={4}>\n              {isLoading ? this.Preloader() : this.buildTemplate()}\n            </Grid>\n          </Container>\n        </main>\n        <ScrollButton scrollStepInPx=\"50\" delayInMs=\"16.66\" />\n      </React.Fragment>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  list: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isRequired\n};\n\nexport { Album };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport './Details.css';\nexport class Details extends React.Component {\n  render() {\n    const { data } = this.props;\n    if (data) {\n      const { title, fullDescription, imgSrc } = data ? data : {};\n\n      const prefix = '/candy/assets/images/';\n      return (\n        <React.Fragment>\n          <main className={'details__container'}>\n            <Card\n              className={'details__card shadow-drop-2-center scale-up-center'}\n            >\n              <CardMedia\n                className={'details__image'}\n                image={prefix + imgSrc}\n                title={title}\n              />\n              <div className={'details__text'}>\n                <CardContent className={'details__content'}>\n                  <Typography\n                    gutterBottom\n                    variant=\"h6\"\n                    component=\"h3\"\n                    className={'details__title'}\n                  >\n                    {title}\n                  </Typography>\n                  <Typography className={'details__description'}>\n                    {fullDescription}\n                  </Typography>\n                </CardContent>\n                <CardActions className={'details__actions'}>\n                  <Link to=\"/\">\n                    <Button size=\"small\" className={'details__card-btn'}>\n                      Назад\n                    </Button>\n                  </Link>\n                  <Link to=\"/order\">\n                    <Button size=\"small\" className={'details__card-btn'}>\n                      Заказать\n                    </Button>\n                  </Link>\n                </CardActions>\n              </div>\n            </Card>\n          </main>\n        </React.Fragment>\n      );\n    } else {\n      return <React.Fragment />;\n    }\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport Container from '@material-ui/core/Container';\nimport './NotFound.css';\nimport '../styles.scss';\n\nexport class NotFound extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <main className={'notFound'}>\n          <div className={'hero-content not-found__hero'}>\n            <div className={'hero-title'}>404</div>\n          </div>\n          <Container maxWidth=\"md\" className={'not-found__container'}>\n            <h3>Упс, страница не нашлась...</h3>\n            <Link to=\"/\" className=\"icon-link\">\n              <KeyboardBackspaceIcon className={'icon'} />Вернуться к выбору\n              тортика\n            </Link>\n          </Container>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport './Order.css';\nimport '../styles.scss';\n\nexport class Order extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <main className={'order__main'}>\n          <div className={'hero-content order__hero'}>\n            <div className={'hero-title'}>Как сделать заказ</div>\n          </div>\n          <Container maxWidth=\"md\" className={'order__container'}>\n            <p>\n              Чтобы заказать торт, вам нужно написать или позвонить в Whatsapp\n              8-913-123-45-67. Мы договоримся о весе торта и сроках его выпечки.\n              Вы можете забрать торт по адресу: наш адрес.\n            </p>\n\n            <Link to=\"/\" className={'icon-link'}>\n              <KeyboardBackspaceIcon className={'icon'} />Вернуться к выбору\n              тортика\n            </Link>\n          </Container>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { Album } from './components/Album';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport WhatsappIcon from '@material-ui/icons/WhatsApp';\nimport AppBar from '@material-ui/core/AppBar';\nimport { Switch, Route } from 'react-router-dom';\nimport { Details } from './components/Details';\nimport { NotFound } from './components/NotFound';\nimport { Order } from './components/Order';\nimport './App.scss';\nimport './components/Album.scss';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" align=\"center\">\n      {'© Домашний кондитер '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nclass App extends React.Component {\n  state = {\n    list: [],\n    isLoading: false\n  };\n\n  componentDidMount() {\n    const url = '/candy/assets/json/cakesList.json';\n    this.setState({ isLoading: true });\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ isLoading: false, list: data });\n      })\n      .catch((error) => {\n        console.error(error);\n        this.setState({ isLoading: false, list: [] });\n      });\n  }\n\n  DetailsWrapper = (props) => {\n    const { id } = props.match.params;\n    const { list } = this.state;\n    const data = list.filter((item) => item.id === id);\n\n    const result =\n      data.length > 0 ? <Details data={data[0]} key={id} /> : <NotFound />;\n    return result;\n  };\n\n  RouterTemplate = (list, isLoading) => {\n    const template = (\n      <div className={'switch'}>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Album list={list} isLoading={isLoading} />}\n          />\n          <Route path=\"/details/:id\" component={this.DetailsWrapper} />\n          <Route path=\"/order\" component={Order} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n    return template;\n  };\n\n  render() {\n    const { list, isLoading } = this.state;\n    return (\n      <div className=\"App\">\n        <AppBar position=\"fixed\" id={'appbar'}>\n          <Toolbar className={'toolbar'}>\n            <WhatsappIcon className={'icon'} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              8-913-123-45-67\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        {this.RouterTemplate(list, isLoading)}\n\n        <footer className={'footer'}>\n          <Typography\n            variant=\"subtitle1\"\n            align=\"center\"\n            component=\"p\"\n            className={'footerText'}\n          >\n            <WhatsappIcon className={'icon'} /> 8-913-123-45-56\n          </Typography>\n          <Copyright />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}